'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;
var _jsxFileName = '/home/radius/Swachhthon/node_modules/react-native-stars/index.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require('react-native');

var StarReview = function (_Component) {
  babelHelpers.inherits(StarReview, _Component);

  function StarReview(props) {
    babelHelpers.classCallCheck(this, StarReview);

    var _this = babelHelpers.possibleConstructorReturn(this, (StarReview.__proto__ || Object.getPrototypeOf(StarReview)).call(this, props));

    _this.state = {
      rating: props.rating
    };

    _this.ratingMode = _this.ratingMode.bind(_this);
    _this.halfRatingMode = _this.halfRatingMode.bind(_this);
    _this.displayBar = _this.displayBar.bind(_this);
    _this.displayOpaque = _this.displayOpaque.bind(_this);
    _this.star = _this.star.bind(_this);
    return _this;
  }

  babelHelpers.createClass(StarReview, [{
    key: 'displayBar',
    value: function displayBar() {
      var partial = this.props.value - Math.floor(this.props.value);
      var blockStyle = { height: this.props.starSize, width: this.props.starSize * (1.0 - partial), backgroundColor: this.props.backingColor };
      var emptyBlockStyle = { height: this.props.starSize, width: this.props.starSize * partial, backgroundColor: 'transparent' };
      var starStyle = { height: this.props.starSize, width: this.props.starSize, backgroundColor: this.props.backingColor };
      if (this.props.tintColor) {
        starStyle.tintColor = this.props.tintColor;
      }
      var stars = [];
      for (var i = 1; i < this.props.count + 1; i++) {
        if (i == Math.floor(this.props.value) + 1) {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 38
              }
            },
            _react2.default.createElement(
              _reactNative.Image,
              { style: starStyle, source: this.props.fullStar, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 39
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                { style: { flexDirection: 'row' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 40
                  }
                },
                _react2.default.createElement(_reactNative.View, { style: emptyBlockStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 41
                  }
                }),
                _react2.default.createElement(_reactNative.View, { style: blockStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 42
                  }
                })
              ),
              _react2.default.createElement(_reactNative.Image, { style: { height: this.props.starSize, width: this.props.starSize, backgroundColor: 'transparent', position: 'absolute', tintColor: this.props.tintColor }, source: this.props.emptyStar, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 44
                }
              })
            )
          ));
        } else if (i > Math.floor(this.props.value) + 1) {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 51
              }
            },
            _react2.default.createElement(_reactNative.Image, { style: starStyle, source: this.props.emptyStar, __source: {
                fileName: _jsxFileName,
                lineNumber: 52
              }
            })
          ));
        } else {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 58
              }
            },
            _react2.default.createElement(_reactNative.Image, { style: starStyle, source: this.props.fullStar, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            })
          ));
        }
      }
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: { flexDirection: 'row', justifyContent: 'center' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          },
          stars
        )
      );
    }
  }, {
    key: 'displayOpaque',
    value: function displayOpaque() {
      var partial = this.props.value - Math.floor(this.props.value);
      var starStyle = { height: this.props.starSize, width: this.props.starSize, opacity: 1.0, backgroundColor: 'transparent' };
      var stars = [];
      if (this.props.tintColor) {
        starStyle.tintColor = this.props.tintColor;
      }
      for (var i = 1; i < this.props.count + 1; i++) {
        if (i == Math.floor(this.props.value) + 1) {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 83
              }
            },
            _react2.default.createElement(
              _reactNative.Image,
              { style: starStyle, source: this.props.emptyStar, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 84
                }
              },
              _react2.default.createElement(_reactNative.Image, { style: {
                  height: this.props.starSize,
                  width: this.props.starSize,
                  opacity: partial,
                  tintColor: this.props.tintColor,
                  backgroundColor: 'transparent' }, source: this.props.fullStar, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 85
                }
              })
            )
          ));
        } else if (i > Math.floor(this.props.value) + 1) {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 97
              }
            },
            _react2.default.createElement(_reactNative.Image, { style: starStyle, source: this.props.emptyStar, __source: {
                fileName: _jsxFileName,
                lineNumber: 98
              }
            })
          ));
        } else {
          stars.push(_react2.default.createElement(
            _reactNative.View,
            { key: i, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 104
              }
            },
            _react2.default.createElement(_reactNative.Image, { style: starStyle, source: this.props.fullStar, __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            })
          ));
        }
      }
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: { flexDirection: 'row', justifyContent: 'center' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 112
            }
          },
          stars
        )
      );
    }
  }, {
    key: 'halfStar',
    value: function halfStar(val, starImg, halfImg) {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { key: val, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 119
          }
        },
        _react2.default.createElement(
          _reactNative.Image,
          { style: { width: this.props.starSize, height: this.props.starSize, tintColor: this.props.tintColor }, source: starImg, __source: {
              fileName: _jsxFileName,
              lineNumber: 120
            }
          },
          _react2.default.createElement(_reactNative.Image, { style: [{ width: this.props.starSize, height: this.props.starSize }, { tintColor: this.props.tintColor }], source: halfImg, __source: {
              fileName: _jsxFileName,
              lineNumber: 121
            }
          })
        ),
        _react2.default.createElement(
          _reactNative.View,
          { style: { flexDirection: 'row', position: 'absolute' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 123
            }
          },
          _react2.default.createElement(_reactNative.TouchableOpacity, { style: { height: this.props.starSize, width: this.props.starSize / 2 }, disabled: this.props.disabled, onPress: function onPress() {
              _this2.setState({ rating: val - 0.5 });
              _this2.props.update(val - 0.5);
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 124
            }
          }),
          _react2.default.createElement(_reactNative.TouchableOpacity, { style: { height: this.props.starSize, width: this.props.starSize / 2 }, disabled: this.props.disabled, onPress: function onPress() {
              _this2.setState({ rating: val });
              _this2.props.update(val);
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 128
            }
          })
        )
      );
    }
  }, {
    key: 'halfRatingMode',
    value: function halfRatingMode() {
      var stars = [];
      for (var i = 1; i < this.props.count + 1; i++) {
        var starImg = i <= this.state.rating ? this.props.fullStar : this.props.emptyStar;
        var halfImg = this.state.rating + 0.5 == i ? this.props.halfStar : null;
        stars.push(this.halfStar(i, starImg, halfImg));
      }
      return _react2.default.createElement(
        _reactNative.View,
        { style: { flexDirection: 'row', justifyContent: 'center' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 147
          }
        },
        stars
      );
    }
  }, {
    key: 'star',
    value: function star(val, starImg) {
      var _this3 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { key: val, style: { paddingLeft: this.props.spacing / 2, paddingRight: this.props.spacing / 2 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 155
          }
        },
        _react2.default.createElement(
          _reactNative.TouchableOpacity,
          { disabled: this.props.disabled, onPress: function onPress() {
              _this3.setState({ rating: val });
              _this3.props.update(val);
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 156
            }
          },
          _react2.default.createElement(_reactNative.Image, { style: { width: this.props.starSize, height: this.props.starSize, tintColor: this.props.tintColor }, source: starImg, __source: {
              fileName: _jsxFileName,
              lineNumber: 160
            }
          })
        )
      );
    }
  }, {
    key: 'ratingMode',
    value: function ratingMode() {
      var stars = [];
      for (var i = 1; i < this.props.count + 1; i++) {
        var starImg = i <= this.state.rating ? this.props.fullStar : this.props.emptyStar;
        stars.push(this.star(i, starImg));
      }
      return _react2.default.createElement(
        _reactNative.View,
        { style: { flexDirection: 'row', justifyContent: 'center' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 175
          }
        },
        stars
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var view = this.props.value == null ? this.props.half ? this.halfRatingMode() : this.ratingMode() : this.props.opacity ? this.displayOpaque() : this.displayBar();
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 184
          }
        },
        view
      );
    }
  }]);
  return StarReview;
}(_react.Component);

exports.default = StarReview;


StarReview.propTypes = {
  value: _propTypes2.default.number,
  count: _propTypes2.default.number,
  rating: _propTypes2.default.number,
  emptyStar: _propTypes2.default.number.isRequired,
  fullStar: _propTypes2.default.number.isRequired,
  halfStar: _propTypes2.default.number,
  update: _propTypes2.default.func,
  starSize: _propTypes2.default.number,
  backingColor: _propTypes2.default.string,
  tintColor: _propTypes2.default.string,
  opacity: _propTypes2.default.bool,
  half: _propTypes2.default.bool,
  spacing: _propTypes2.default.number,
  disabled: _propTypes2.default.bool
};

StarReview.defaultProps = {
  fullStar: require('./example-images/starFilled.png'),
  halfStar: require('./example-images/starHalf.png'),
  emptyStar: require('./example-images/starEmpty.png'),
  disabled: false,
  value: null,
  count: 5,
  rating: 0,
  starSize: 30,
  update: function update() {},
  backingColor: 'white',
  tintColor: null,
  opacity: false,
  half: false,
  spacing: 0
};